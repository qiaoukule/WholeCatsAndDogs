[{"E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\index.js":"1","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\App.js":"2","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\Main.js":"3","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\Login.js":"4","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\AdminIndex.js":"5","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\AddArticle.js":"6","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\config\\apiUrl.js":"7"},{"size":166,"mtime":1611801909192,"results":"8","hashOfConfig":"9"},{"size":211,"mtime":1611801693038,"results":"10","hashOfConfig":"9"},{"size":443,"mtime":1612017166884,"results":"11","hashOfConfig":"9"},{"size":3151,"mtime":1612018224144,"results":"12","hashOfConfig":"9"},{"size":3343,"mtime":1612019590243,"results":"13","hashOfConfig":"9"},{"size":7797,"mtime":1612153714861,"results":"14","hashOfConfig":"9"},{"size":367,"mtime":1612105950375,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"kxj1fb",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\index.js",[],["33","34"],"E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\App.js",[],"E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\Main.js",[],"E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\Login.js",["35"],"import React, {useState} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {Card, Input, Button, Spin, message} from 'antd'\r\nimport '../static/css/Login.css'\r\nimport axios from 'axios'\r\nimport servicePath from '../config/apiUrl'\r\n\r\nfunction Login(props){\r\n\r\n    const [userName,setUserName] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [isLoading,setIsLoading] = useState(false)//防止重复提交\r\n\r\n    const checkLogin = () =>{\r\n        setIsLoading(true)\r\n       /* setTimeout(()=>{\r\n            setIsLoading(false)\r\n        },1000)*/\r\n        if(!userName){\r\n            message.error(\"用户名不能为空\")\r\n            setTimeout(()=>{\r\n                setIsLoading(false)\r\n            },500)\r\n            return false\r\n        }else if(!password) {\r\n            message.error(\"密码不能为空\")\r\n            setTimeout(()=>{\r\n                setIsLoading(false)\r\n            },500)\r\n            return false\r\n        }\r\n        let dataProps = {//以对象形式传递给后台\r\n            'userName':userName,\r\n            'password':password\r\n        }\r\n        axios({\r\n            method:'post',\r\n            url:servicePath.checkLogin,\r\n            data:dataProps,\r\n            withCredentials: true,\r\n            'Content-Type':'application/json;charset=UTF-8',\r\n            \"Access-Control-Allow-Credentials\": true,\r\n            \"Access-Control-Allow-Headers\":\"Authorization,Origin, X-Requested-With, Content-Type, Accept\",\r\n            \"Access-Control-Allow-Methods\":\"GET,HEAD,PUT,POST,DELETE,PATCH,OPTIONS\"\r\n        }).then(\r\n            res => {\r\n                setIsLoading(false)\r\n                if(res.data.data == '登录成功') {\r\n                    localStorage.setItem('openId',res.data.openId)\r\n                    /*编程导航*/ \r\n                    props.history.push('/AdminIndex/')\r\n                } else {\r\n                    message.error('用户密码错误')\r\n                }\r\n            }\r\n        ).catch(\r\n            err => {\r\n                console.log(err);\r\n            }\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"login-div\">\r\n              <Spin tip=\"Loading...\" spinning={isLoading}>\r\n                 <Card title=\"Login\" bordered={true} style={{width: 400}}>\r\n                     <Input \r\n                        id=\"userName\"\r\n                        size=\"large\"\r\n                        placeholder=\"Enter Your userName\"\r\n                        onChange={(e)=>{setUserName(e.target.value)}}\r\n                    />\r\n                     <br/><br/>\r\n                    <Input.Password \r\n                        id=\"password\"\r\n                        size=\"large\"\r\n                        placeholder=\"Enter your password\"\r\n                       \r\n                       onChange={(e)=>{setPassword(e.target.value)}}\r\n                     />\r\n                      <br/><br/>\r\n                        <Button type=\"primary\" size=\"large\" block onClick={checkLogin}>\r\n                          Login in\r\n                      </Button>  \r\n                </Card> \r\n            </Spin>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\AdminIndex.js",["36","37","38","39"],"//直接拿antd的布局例子改写成hooks\r\n//路由部分：刷新后，页面会空白，渲染不出来\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport {\r\n    DesktopOutlined,\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\nimport '../static/css/AdminIndex.css'\r\nimport React, { useState } from 'react';\r\nimport { Route, Link, Switch, BrowserRouter as Router, } from 'react-router-dom';\r\nimport AddArticle from '../Pages/AddArticle'\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nfunction AdminIndex(props) {\r\n\r\n    const { children, location, loading } = props;\r\n\r\n    const [collapsed, setCollapsed] = useState(false)\r\n\r\n    const onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        setCollapsed(collapsed)\r\n    };\r\n\r\n    return (\r\n    <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n            <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                    <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n                        文章管理\r\n                    </Menu.Item>\r\n                    <SubMenu key=\"sub1\" icon={<DesktopOutlined />} title=\"文章管理\">\r\n                        <Menu.Item key=\"3\"> \r\n                            <Link to=\"/addArticle\">添加文章</Link>\r\n                         </Menu.Item>\r\n                        <Menu.Item key=\"4\">文章列表</Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\r\n                        <Menu.Item key=\"6\">Team 1</Menu.Item>\r\n                        <Menu.Item key=\"8\">Team 2</Menu.Item>\r\n                    </SubMenu>\r\n                    <Menu.Item key=\"9\" icon={<FileOutlined />}>\r\n                        留言管理\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout className=\"site-layout\">\r\n                <Content style={{ margin: '0 16px' }}>\r\n                    <Breadcrumb style={{ margin: '16px 0' }}>\r\n                        <Breadcrumb.Item>后台管理系统</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>工作台</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                        <div>\r\n                            <Switch>\r\n                               {/*  错误 children={AddArticle} */}\r\n                                <Route path=\"/addArticle\"  >\r\n                                    <AddArticle  history={props.history}/>\r\n                                </Route>\r\n                                <Route path=\"/AdminIndex/one\" children={<h3>One</h3>} />\r\n                                <Route path=\"/two\" children={<h3>Two</h3>} />\r\n                            </Switch>\r\n                            {children}\r\n                        </div>\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n            </Layout>\r\n        </Layout>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default AdminIndex","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\AddArticle.js",["40","41","42","43","44"],"E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\config\\apiUrl.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":48,"column":34,"nodeType":"51","messageId":"52","endLine":48,"endColumn":36},{"ruleId":"53","severity":1,"message":"54","line":9,"column":5,"nodeType":"55","messageId":"56","endLine":9,"endColumn":17},{"ruleId":"53","severity":1,"message":"57","line":16,"column":9,"nodeType":"55","messageId":"56","endLine":16,"endColumn":15},{"ruleId":"53","severity":1,"message":"58","line":21,"column":23,"nodeType":"55","messageId":"56","endLine":21,"endColumn":31},{"ruleId":"53","severity":1,"message":"59","line":21,"column":33,"nodeType":"55","messageId":"56","endLine":21,"endColumn":40},{"ruleId":"53","severity":1,"message":"60","line":8,"column":9,"nodeType":"55","messageId":"56","endLine":8,"endColumn":15},{"ruleId":"53","severity":1,"message":"61","line":19,"column":12,"nodeType":"55","messageId":"56","endLine":19,"endColumn":22},{"ruleId":"53","severity":1,"message":"62","line":19,"column":24,"nodeType":"55","messageId":"56","endLine":19,"endColumn":37},{"ruleId":"63","severity":1,"message":"64","line":26,"column":8,"nodeType":"65","endLine":26,"endColumn":10,"suggestions":"66"},{"ruleId":"49","severity":1,"message":"50","line":59,"column":35,"nodeType":"51","messageId":"52","endLine":59,"endColumn":37},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'UserOutlined' is defined but never used.","Identifier","unusedVar","'Header' is assigned a value but never used.","'location' is assigned a value but never used.","'loading' is assigned a value but never used.","'Option' is assigned a value but never used.","'updateDate' is assigned a value but never used.","'setUpdateDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTypeInfor'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [getTypeInfor]",{"range":"72","text":"73"},[1147,1149],"[getTypeInfor]"]