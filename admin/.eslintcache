[{"E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\index.js":"1","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\App.js":"2","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\Main.js":"3","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\Login.js":"4","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\AdminIndex.js":"5","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\AddArticle.js":"6","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\config\\apiUrl.js":"7","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\ArticleList.js":"8"},{"size":166,"mtime":1611801909192,"results":"9","hashOfConfig":"10"},{"size":211,"mtime":1611801693038,"results":"11","hashOfConfig":"10"},{"size":440,"mtime":1612163073429,"results":"12","hashOfConfig":"10"},{"size":3151,"mtime":1612018224144,"results":"13","hashOfConfig":"10"},{"size":3463,"mtime":1612160035888,"results":"14","hashOfConfig":"10"},{"size":7797,"mtime":1612153714861,"results":"15","hashOfConfig":"10"},{"size":517,"mtime":1612164260986,"results":"16","hashOfConfig":"10"},{"size":2614,"mtime":1612166193780,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"kxj1fb",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\index.js",[],["37","38"],"E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\App.js",[],"E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\Main.js",[],"E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\Login.js",["39"],"import React, {useState} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {Card, Input, Button, Spin, message} from 'antd'\r\nimport '../static/css/Login.css'\r\nimport axios from 'axios'\r\nimport servicePath from '../config/apiUrl'\r\n\r\nfunction Login(props){\r\n\r\n    const [userName,setUserName] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [isLoading,setIsLoading] = useState(false)//防止重复提交\r\n\r\n    const checkLogin = () =>{\r\n        setIsLoading(true)\r\n       /* setTimeout(()=>{\r\n            setIsLoading(false)\r\n        },1000)*/\r\n        if(!userName){\r\n            message.error(\"用户名不能为空\")\r\n            setTimeout(()=>{\r\n                setIsLoading(false)\r\n            },500)\r\n            return false\r\n        }else if(!password) {\r\n            message.error(\"密码不能为空\")\r\n            setTimeout(()=>{\r\n                setIsLoading(false)\r\n            },500)\r\n            return false\r\n        }\r\n        let dataProps = {//以对象形式传递给后台\r\n            'userName':userName,\r\n            'password':password\r\n        }\r\n        axios({\r\n            method:'post',\r\n            url:servicePath.checkLogin,\r\n            data:dataProps,\r\n            withCredentials: true,\r\n            'Content-Type':'application/json;charset=UTF-8',\r\n            \"Access-Control-Allow-Credentials\": true,\r\n            \"Access-Control-Allow-Headers\":\"Authorization,Origin, X-Requested-With, Content-Type, Accept\",\r\n            \"Access-Control-Allow-Methods\":\"GET,HEAD,PUT,POST,DELETE,PATCH,OPTIONS\"\r\n        }).then(\r\n            res => {\r\n                setIsLoading(false)\r\n                if(res.data.data == '登录成功') {\r\n                    localStorage.setItem('openId',res.data.openId)\r\n                    /*编程导航*/ \r\n                    props.history.push('/AdminIndex/')\r\n                } else {\r\n                    message.error('用户密码错误')\r\n                }\r\n            }\r\n        ).catch(\r\n            err => {\r\n                console.log(err);\r\n            }\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"login-div\">\r\n              <Spin tip=\"Loading...\" spinning={isLoading}>\r\n                 <Card title=\"Login\" bordered={true} style={{width: 400}}>\r\n                     <Input \r\n                        id=\"userName\"\r\n                        size=\"large\"\r\n                        placeholder=\"Enter Your userName\"\r\n                        onChange={(e)=>{setUserName(e.target.value)}}\r\n                    />\r\n                     <br/><br/>\r\n                    <Input.Password \r\n                        id=\"password\"\r\n                        size=\"large\"\r\n                        placeholder=\"Enter your password\"\r\n                       \r\n                       onChange={(e)=>{setPassword(e.target.value)}}\r\n                     />\r\n                      <br/><br/>\r\n                        <Button type=\"primary\" size=\"large\" block onClick={checkLogin}>\r\n                          Login in\r\n                      </Button>  \r\n                </Card> \r\n            </Spin>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\AdminIndex.js",["40","41","42","43","44"],"E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\AddArticle.js",["45","46","47","48","49"],"import React, { useState, useEffect } from 'react'\r\nimport marked from 'marked'\r\nimport '../static/css/AddArticle.css'\r\nimport { Row, Col, Input, Select, Button, DatePicker, message } from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../config/apiUrl'\r\n\r\nconst { Option } = Select\r\nconst { TextArea } = Input\r\n\r\nfunction AddArticle(ooo) {\r\n    const [articleId, setArticleId] = useState(0)  // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n    const [articleTitle, setArticleTitle] = useState('')   //文章标题\r\n    const [articleContent, setArticleContent] = useState('')  //markdown的编辑内容\r\n    const [markdownContent, setMarkdownContent] = useState('预览内容') //html内容\r\n    const [introducemd, setIntroducemd] = useState()            //简介的markdown内容\r\n    const [introducehtml, setIntroducehtml] = useState('等待编辑') //简介的html内容\r\n    const [showDate, setShowDate] = useState()   //发布日期\r\n    const [updateDate, setUpdateDate] = useState() //修改日志的日期\r\n    const [typeInfo, setTypeInfo] = useState([]) // 文章类别信息\r\n    const [selectedType, setSelectType] = useState(['请选择类别']) //选择的文章类别\r\n\r\n    useEffect(() => {\r\n        //进入页面执行一次\r\n        getTypeInfor()\r\n    }, [])\r\n\r\n    marked.setOptions({\r\n        renderer: new marked.Renderer(),\r\n        gfm: true,\r\n        pedantic: false,\r\n        sanitize: false,\r\n        tables: true,\r\n        breaks: false,\r\n        smartLists: true,\r\n        smartypants: false,\r\n    });\r\n\r\n    const changeContent = (e) => {\r\n        setArticleContent(e.target.value)\r\n        let html = marked(e.target.value)\r\n        setMarkdownContent(html)\r\n    }\r\n\r\n    const changeIntroduce = (e) => {\r\n        setIntroducemd(e.target.value)\r\n        let html = marked(e.target.value)\r\n        setIntroducehtml(html)\r\n    }\r\n\r\n    const getTypeInfor = ()=> {\r\n        axios({\r\n            method: 'get',\r\n            url: servicePath.getTypeInfo,\r\n            header:{ 'Access-Control-Allow-Origin':'*' },\r\n            withCredentials: true,//跨域\r\n        }).then(\r\n            res => {\r\n                if (res.data.data == \"请登录\") {\r\n                    localStorage.getItem('openId')\r\n                    localStorage.removeItem('openId')\r\n                    ooo.history.push('/')//这里需要父组件传参数进来，不然就是{}，根本跳转不了！！！\r\n                } else {\r\n                    setTypeInfo(res.data.data)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const selectedTypeHandler =(value)=>{\r\n        console.log(value);\r\n        setSelectType(value)\r\n    }\r\n\r\n    const saveArticle =()=>{\r\n       // markedContent()  //先进行转换\r\n\r\n        if(!selectedType){\r\n            message.error(\"请选择文章类型\")\r\n            return false\r\n        } else if(!articleTitle){\r\n            message.error(\"请输入文章标题\")\r\n            return false\r\n        }\r\n        else if(!introducemd){\r\n            message.error(\"请输入文章简介\")\r\n            return false\r\n        }\r\n        else if(!showDate){\r\n            message.error(\"请选择发布日期\")\r\n            return false\r\n        } \r\n        let dataProps = {}\r\n        dataProps.type_id = selectedType\r\n        dataProps.title = articleTitle\r\n        dataProps.article_content = articleContent\r\n        dataProps.introduce = introducemd\r\n      //  dataProps.id =  articleId\r\n       // let dataText = showDate.replace('-','/')//把字符串转换成时间戳\r\n        dataProps.addTime = (new Date(showDate).getTime()/1000);\r\n        if(articleId === 0) { \r\n            dataProps.view_count = Math.ceil(Math.random()*100)+1000;\r\n            axios({\r\n                method:'post',\r\n                url:servicePath.addArticle,\r\n                data:dataProps,\r\n                withCredentials:true,\r\n            }).then(res => {\r\n                setArticleId(res.data.insertId)\r\n                console.log(\"--\"+res.data.insertId);\r\n                if(res.data.isSuccess) {\r\n                    message.success(\"发布成功！\")\r\n                } else{\r\n                    message.error(\"文章发布失败！\")\r\n                }\r\n            })\r\n        }\r\n        else{//修改文章\r\n            dataProps.id = articleId\r\n            axios({\r\n                method:'post',\r\n                url:servicePath.updateArticle,\r\n                data:dataProps,\r\n                withCredentials:true,\r\n            }).then(\r\n                res=>{\r\n                    if(res.data.isSuccess){\r\n                        message.success(\"保存成功！\")\r\n                    } else {\r\n                        message.error(\"保存失败！\")\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row gutter={5}>\r\n                <Col span={18}>\r\n                    <Row gutter={10}>\r\n                        <Col span={20}>\r\n                            <Input placeholder=\"博客标题\" size=\"large\" value={articleTitle} onChange={e => setArticleTitle(e.target.value)}/>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            &nbsp;\r\n                        <Select defaultValue={selectedType} size=\"large\" onChange={selectedTypeHandler}>\r\n                                {typeInfo.map((item,index) => (\r\n                                    <Select.Option key={index} value={item.id}>\r\n                                        {item.typeName}\r\n                                    </Select.Option>\r\n                                ))}\r\n                            </Select>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={10} >\r\n                        <Col span={12}>\r\n                            <TextArea\r\n                                className=\"markdown-content\"\r\n                                rows={35}\r\n                                onChange={changeContent}\r\n                                placeholder=\"文章内容\"\r\n                            />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <div\r\n                                className=\"show-html\"\r\n                                dangerouslySetInnerHTML={{ __html: markdownContent }}\r\n                            >\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Row>\r\n                        <Col span=\"24\">\r\n                            <Button size=\"large\">暂存文章</Button>&nbsp;\r\n                            <Button size=\"large\" type=\"primary\" onClick={saveArticle}>发布文章</Button>\r\n                            <br />\r\n                        </Col>\r\n                        <Col span=\"24\">\r\n                            <br />\r\n                            <TextArea rows={4} placeholder=\"文章简介\" onChange={changeIntroduce} onPressEnter={changeIntroduce}></TextArea>\r\n                            <br /><br />\r\n                            <div className=\"introduce-html\" dangerouslySetInnerHTML={{ __html: '文章简介：' + introducehtml }}></div>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <div className=\"data-select\">\r\n                                <DatePicker placeholder=\"发布日期\" size=\"large\" onChange={(date,dateString) => setShowDate(dateString)}/>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddArticle;","E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\config\\apiUrl.js",[],"E:\\自学加油！\\自学31-技术胖博客开发\\react_blog\\admin\\src\\Pages\\ArticleList.js",["50","51","52","53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":48,"column":34,"nodeType":"61","messageId":"62","endLine":48,"endColumn":36},{"ruleId":"63","severity":1,"message":"64","line":9,"column":5,"nodeType":"65","messageId":"66","endLine":9,"endColumn":17},{"ruleId":"63","severity":1,"message":"67","line":17,"column":9,"nodeType":"65","messageId":"66","endLine":17,"endColumn":15},{"ruleId":"63","severity":1,"message":"68","line":22,"column":13,"nodeType":"65","messageId":"66","endLine":22,"endColumn":21},{"ruleId":"63","severity":1,"message":"69","line":22,"column":23,"nodeType":"65","messageId":"66","endLine":22,"endColumn":31},{"ruleId":"63","severity":1,"message":"70","line":22,"column":33,"nodeType":"65","messageId":"66","endLine":22,"endColumn":40},{"ruleId":"63","severity":1,"message":"71","line":8,"column":9,"nodeType":"65","messageId":"66","endLine":8,"endColumn":15},{"ruleId":"63","severity":1,"message":"72","line":19,"column":12,"nodeType":"65","messageId":"66","endLine":19,"endColumn":22},{"ruleId":"63","severity":1,"message":"73","line":19,"column":24,"nodeType":"65","messageId":"66","endLine":19,"endColumn":37},{"ruleId":"74","severity":1,"message":"75","line":26,"column":8,"nodeType":"76","endLine":26,"endColumn":10,"suggestions":"77"},{"ruleId":"59","severity":1,"message":"60","line":59,"column":35,"nodeType":"61","messageId":"62","endLine":59,"endColumn":37},{"ruleId":"63","severity":1,"message":"78","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":14},{"ruleId":"63","severity":1,"message":"79","line":2,"column":16,"nodeType":"65","messageId":"66","endLine":2,"endColumn":19},{"ruleId":"63","severity":1,"message":"80","line":2,"column":21,"nodeType":"65","messageId":"66","endLine":2,"endColumn":24},{"ruleId":"81","severity":1,"message":"82","line":50,"column":29,"nodeType":"83","endLine":50,"endColumn":32},{"ruleId":"63","severity":1,"message":"84","line":73,"column":9,"nodeType":"65","messageId":"66","endLine":73,"endColumn":13},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'UserOutlined' is defined but never used.","Identifier","unusedVar","'Header' is assigned a value but never used.","'children' is assigned a value but never used.","'location' is assigned a value but never used.","'loading' is assigned a value but never used.","'Option' is assigned a value but never used.","'updateDate' is assigned a value but never used.","'setUpdateDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTypeInfor'. Either include it or remove the dependency array.","ArrayExpression",["87"],"'List' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [getTypeInfor]",{"range":"90","text":"91"},[1147,1149],"[getTypeInfor]"]